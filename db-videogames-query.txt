1) Selezionare tutte le software house americane (3)

SELECT *
FROM software_houses sh
WHERE country = 'united states'

----------------------------------------------------------------------------

2) Selezionare tutti i giocatori della cittÃ di 'Rogahnland' (2)

SELECT *
FROM players p 
WHERE city = 'Rogahnland'

----------------------------------------------------------------------------

3) Selezionare tutti i giocatori il cui nome finisce per "a" (220)

SELECT *
FROM players p 
WHERE RIGHT (name, 1) = 'a'

----------------------------------------------------------------------------

4) Selezionare tutte le recensioni scritte dal giocatore con ID = 800 (11)

SELECT r.*, p.id 
FROM reviews r
JOIN players p ON r.player_id = p.id
WHERE p.id = 800

----------------------------------------------------------------------------

5) Contare quanti tornei ci sono stati nell'anno 2015 (9)

SELECT count(id)
FROM tournaments t
WHERE YEAR = 2015

----------------------------------------------------------------------------

6) Selezionare tutti i premi che contengono nella descrizione la parola 'facere' (2)

SELECT *
FROM awards a
WHERE description LIKE '%facere%'

----------------------------------------------------------------------------

7) Selezionare tutti i videogame che hanno la categoria 2 (FPS) o 6 (RPG), mostrandoli una sola volta (del videogioco vogliamo solo l'ID) (287)

SELECT DISTINCT v.id
FROM videogames v 
JOIN category_videogame cv ON v.id = cv.videogame_id 
JOIN categories c ON c.id = cv.category_id
WHERE c.name  = 'FPS' OR c.name = 'RPG'

----------------------------------------------------------------------------

8) Selezionare tutte le recensioni con voto compreso tra 2 e 4 (2947)

SELECT *
FROM reviews r
WHERE rating BETWEEN 2 AND 4

----------------------------------------------------------------------------

9) Selezionare tutti i dati dei videogiochi rilasciati nell'anno 2020 (46)

SELECT *
FROM videogames v
WHERE YEAR (release_date) = 2020

----------------------------------------------------------------------------

10) Selezionare gli id dei videogame che hanno ricevuto almeno una recensione da 5 stelle, mostrandoli una sola volta (443)

SELECT DISTINCT v.id
FROM videogames v
JOIN reviews r ON v.id = r.videogame_id
WHERE r.rating = 5

----------------------------------------------------------------------------

11) Selezionare il numero e la media delle recensioni per il videogioco con ID = 412 (review number = 12, avg_rating = 3.16 circa)

SELECT DISTINCT count(r.videogame_id), avg(r.rating)
FROM videogames v
JOIN reviews r ON v.id = r.videogame_id
WHERE v.id = 412

----------------------------------------------------------------------------

12) Selezionare il numero di videogame che la software house con ID = 1 ha rilasciato nel 2018 (13)

SELECT count(v.id)
FROM videogames v
JOIN software_houses sh ON sh.id = v.software_house_id
WHERE sh.id = 1 AND YEAR(v.release_date) = 2018

----------------------------------------------------------------------------

13) Contare quante software house ci sono per ogni paese (3)

SELECT country, count(id)
FROM software_houses sh
GROUP BY country

----------------------------------------------------------------------------

14) Contare quante recensioni ha ricevuto ogni videogioco (del videogioco vogliamo solo l'ID) (500)

SELECT v.id, count(r.id)
FROM videogames v 
JOIN reviews r ON v.id = r.videogame_id
GROUP BY v.id

----------------------------------------------------------------------------

15) Contare quanti videogiochi hanno ciascuna classificazione PEGI (della classificazione PEGI vogliamo solo l'ID) (13)

SELECT pl.id, count(v.id)
FROM pegi_labels pl 
JOIN pegi_label_videogame plv ON pl.id = plv.pegi_label_id
JOIN videogames v ON plv.videogame_id = v.id
GROUP BY pl.id

----------------------------------------------------------------------------

16) Mostrare il numero di videogiochi rilasciati ogni anno (11)

SELECT date_format(release_date, '%Y'), count(v.id) 
FROM videogames v
GROUP BY 1

----------------------------------------------------------------------------

17) Contare quanti videogiochi sono disponbiili per ciascun device (del device vogliamo solo l'ID) (7)

SELECT d.id, count(v.id)
FROM devices d
JOIN device_videogame dv ON d.id = dv.device_id
JOIN videogames v ON v.id = dv.videogame_id
GROUP BY d.id

----------------------------------------------------------------------------

18) Ordinare i videogame in base alla media delle recensioni (del videogioco vogliamo solo l'ID) (500)

SELECT v.id, avg(r.rating) 
FROM videogames v
JOIN reviews r ON v.id = r.videogame_id
GROUP BY v.id 
ORDER BY 2

----------------------------------------------------------------------------

19) Selezionare i dati di tutti giocatori che hanno scritto almeno una recensione, mostrandoli una sola volta (996)

SELECT DISTINCT p.*
FROM videogames v
JOIN reviews r ON v.id = r.videogame_id 
JOIN players p ON p.id = r.player_id

----------------------------------------------------------------------------

20) Sezionare tutti i videogame dei tornei tenuti nel 2016, mostrandoli una sola volta (226)

SELECT DISTINCT v.*
FROM videogames v
JOIN tournament_videogame tv ON tv.videogame_id = v.id
JOIN tournaments t ON t.id = tv.tournament_id
WHERE t.`year` = 2016

----------------------------------------------------------------------------

21) Mostrare le categorie di ogni videogioco (1718)

SELECT v.id, c.*
FROM videogames v
JOIN category_videogame cv ON v.id = cv.videogame_id 
JOIN categories c ON c.id = cv.category_id

----------------------------------------------------------------------------

22) Selezionare i dati di tutte le software house che hanno rilasciato almeno un gioco dopo il 2020, mostrandoli una sola volta (6)

SELECT DISTINCT sh.*
FROM software_houses sh
JOIN videogames v ON v.software_house_id = sh.id
WHERE YEAR(release_date) >= 2020

----------------------------------------------------------------------------

23) Selezionare i premi ricevuti da ogni software house per i videogiochi che ha prodotto (55)

SELECT sh.id, sh.name, a.*
FROM awards a 
JOIN award_videogame av ON a.id = av.award_id 
JOIN videogames v ON v.id = av.videogame_id 
JOIN software_houses sh ON v.software_house_id = sh.i

----------------------------------------------------------------------------

24) Selezionare categorie e classificazioni PEGI dei videogiochi che hanno ricevuto recensioni da 4 e 5 stelle, mostrandole una sola volta (3363)

SELECT DISTINCT v.id, c.name, pl.name
FROM categories c 
JOIN category_videogame cv ON c.id = cv.category_id 
JOIN videogames v ON v.id = cv.videogame_id
JOIN pegi_label_videogame plv ON v.id = plv.videogame_id 
JOIN pegi_labels pl ON pl.id = plv.pegi_label_id
JOIN reviews r ON r.videogame_id = v.id
WHERE r.rating BETWEEN 4 AND 5

----------------------------------------------------------------------------

25) Selezionare quali giochi erano presenti nei tornei nei quali hanno partecipato i giocatori il cui nome inizia per 'S' (474)

SELECT DISTINCT v.*
FROM videogames v
JOIN tournament_videogame tv ON tv.videogame_id = v.id 
JOIN tournaments t ON t.id = tv.tournament_id
JOIN player_tournament pt ON pt.tournament_id = t.id 
JOIN players p ON p.id = pt.player_id
WHERE LEFT (p.name, 1) = 'S'

----------------------------------------------------------------------------

26) Selezionare le cittÃ in cui Ã¨ stato giocato il gioco dell'anno del 2018 (36)

SELECT t.city  
FROM videogames v 
JOIN tournament_videogame tv ON v.id = tv.videogame_id 
JOIN tournaments t  ON t.id = tv.tournament_id
JOIN award_videogame av ON v.id = av.videogame_id
JOIN awards a ON a.id = av.award_id
WHERE a.name = "Gioco dell'anno" AND av.`year` = 2018

----------------------------------------------------------------------------

27) Selezionare i dati della prima software house che ha rilasciato un gioco, assieme ai dati del gioco stesso (software house id : 5)

SELECT *
FROM software_houses sh
JOIN videogames v ON v.software_house_id = sh.id
ORDER BY v.release_date
LIMIT 1

----------------------------------------------------------------------------

28) Selezionare i dati del videogame (id, name, release_date, totale recensioni) con piÃ¹ recensioni (videogame id : potrebbe uscire 449 o 398, sono entrambi a 20)

SELECT v.id, v.name, v.release_date, count(r.id) AS Totale_Recensioni
FROM videogames v
JOIN reviews r ON r.videogame_id = v.id 
GROUP BY 1
ORDER BY count(r.id) DESC
LIMIT 1

----------------------------------------------------------------------------

29) Selezionare la software house che ha vinto piÃ¹ premi tra il 2015 e il 2016 (software house id : potrebbe uscire 3 o 1, sono entrambi a 3)

SELECT sh.*, count(a.id) as N_Premi
FROM software_houses sh
JOIN videogames v ON v.software_house_id = sh.id
JOIN award_videogame av ON av.videogame_id = v.id
JOIN awards a ON a.id = av.award_id
WHERE av.`year` BETWEEN 2015 AND 2016
GROUP BY 1
ORDER BY count(a.id) DESC 
LIMIT 1

----------------------------------------------------------------------------

30) Selezionare le categorie dei videogame i quali hanno una media recensioni inferiore a 2 (10)

SELECT DISTINCT c.*
FROM categories c
JOIN category_videogame cv ON c.id = cv.category_id
WHERE videogame_id in (
SELECT v.id
FROM videogames v 
JOIN reviews r ON v.id = r.videogame_id 
GROUP BY 1
HAVING avg(rating) < 2
)
